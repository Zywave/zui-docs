{
  "version": "experimental",
  "tags": [
    {
      "name": "zui-input",
      "path": "./..\\src\\zui-input.ts",
      "description": "A form control to allow a user to provide a value, such as text or color",
      "attributes": [
        {
          "name": "value",
          "description": "Represents the value of the input. Can be set to a default value, and will reflect the value provided by the user when interactive with the control"
        },
        {
          "name": "placeholder",
          "description": "An optional placeholder value (e.g. \"ghost text\"). Use this to provide extra contextual information, but do not use in place of a label!",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "required",
          "description": "Represents that this control must be filled in for form submission",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "maxlength",
          "description": "Represnts the maximum length of characters supported by value",
          "type": "number",
          "default": "524288"
        },
        {
          "name": "type",
          "description": "Represents the type of the input. Defaults to `'text'`",
          "type": " 'text' | 'number' | 'color' | 'tel' | 'email' | 'password' | 'url' ",
          "default": "\"text\""
        },
        {
          "name": "recommended-values",
          "description": "An optional list of values to recommend to the user; best used with [type='color']",
          "type": "unknown[] | null"
        }
      ],
      "properties": [
        {
          "name": "value",
          "attribute": "value",
          "description": "Represents the value of the input. Can be set to a default value, and will reflect the value provided by the user when interactive with the control"
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "description": "An optional placeholder value (e.g. \"ghost text\"). Use this to provide extra contextual information, but do not use in place of a label!",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "required",
          "attribute": "required",
          "description": "Represents that this control must be filled in for form submission",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "maxlength",
          "attribute": "maxlength",
          "description": "Represnts the maximum length of characters supported by value",
          "type": "number",
          "default": "524288"
        },
        {
          "name": "type",
          "attribute": "type",
          "description": "Represents the type of the input. Defaults to `'text'`",
          "type": " 'text' | 'number' | 'color' | 'tel' | 'email' | 'password' | 'url' ",
          "default": "\"text\""
        },
        {
          "name": "recommendedValues",
          "attribute": "recommended-values",
          "description": "An optional list of values to recommend to the user; best used with [type='color']",
          "type": "unknown[] | null"
        },
        {
          "name": "form",
          "type": "HTMLFormElement | null"
        },
        {
          "name": "name",
          "type": "string | null"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "readOnly",
          "type": "boolean"
        },
        {
          "name": "autofocus",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "input",
          "description": "See https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event"
        },
        {
          "name": "change",
          "description": "See https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event"
        }
      ],
      "slots": [
        {
          "name": "",
          "description": "An optional slot to allow you to provide a native input; if provided, zui-input will keep its value in sync with that value. This is helpful for certain server-side applications"
        }
      ]
    },
    {
      "name": "zui-input-file",
      "path": "./..\\src\\zui-input-file.ts",
      "description": "### Example\r\n```html\r\n<zui-input-file placeholder=\"Test placeholder\" button-text=\"Browse files\" accept=\"image/png, image/jpeg\"></zui-input-file></zui-input-file>\r\n```",
      "attributes": [
        {
          "name": "button-text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "accept",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "placeholder",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "no-icon",
          "type": "boolean",
          "default": "false"
        }
      ],
      "properties": [
        {
          "name": "files",
          "type": "FileList"
        },
        {
          "name": "buttonText",
          "attribute": "button-text",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "accept",
          "attribute": "accept",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "placeholder",
          "attribute": "placeholder",
          "type": "string",
          "default": "\"\""
        },
        {
          "name": "required",
          "attribute": "required",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "noIcon",
          "attribute": "no-icon",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "form",
          "type": "HTMLFormElement | null"
        },
        {
          "name": "name",
          "type": "string | null"
        },
        {
          "name": "disabled",
          "type": "boolean"
        },
        {
          "name": "readOnly",
          "type": "boolean"
        },
        {
          "name": "autofocus",
          "type": "boolean"
        }
      ],
      "events": [
        {
          "name": "change"
        }
      ]
    }
  ]
}